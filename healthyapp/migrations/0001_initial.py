# Generated by Django 2.0.2 on 2018-02-10 23:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Homme'), ('F', 'Femme')], max_length=1, null=True, verbose_name='Sexe')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='date de naissance')),
                ('weight', models.FloatField(blank=True, null=True, verbose_name='poids actuel')),
                ('objective_weight', models.FloatField(blank=True, null=True, verbose_name='poids souhaité')),
                ('height', models.SmallIntegerField(blank=True, null=True, verbose_name='taille')),
                ('activity', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'sédentaire'), (2, 'légèrement actif'), (3, 'actif'), (4, 'très actif'), (5, 'extrêmement actif')], null=True, verbose_name='activité')),
                ('objective', models.SmallIntegerField(blank=True, choices=[(-1, 'perdre du poids'), (1, 'prendre du poids')], null=True, verbose_name='objectif')),
                ('progress', models.FloatField(blank=True, choices=[(0.25, '0,25 kg / semaine'), (0.5, '0,50 kg / semaine'), (1.0, '1,00 kg / semaine')], null=True, verbose_name='progression')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'profil',
                'verbose_name_plural': 'profils',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, verbose_name='date')),
                ('weight', models.FloatField(verbose_name='poids')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'activité',
                'verbose_name_plural': 'activités',
            },
        ),
        migrations.AlterUniqueTogether(
            name='activity',
            unique_together={('user', 'date')},
        ),
    ]
